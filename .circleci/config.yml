version: 2.1

executors:
  dotnet-core-sdk:
    docker:
    - image: mcr.microsoft.com/dotnet/sdk:5.0
  docker-publisher:
    environment:
      IMAGE_NAME: openftth/tile-data-extract
    docker:
      - image: cimg/base:2020.09
  alpine-git:
    environment:
      IMAGE_NAME: openftth/tile-data-extract
    docker:
    - image: alpine/git

jobs:
  build-app:
    executor: dotnet-core-sdk
    steps:
      - checkout
      - run:
          name: apt update
          command: apt-get update;
      - run:
          name: restore
          command: dotnet restore
      - run:
          name: build
          command: dotnet build -c Release

  test-app:
    executor: dotnet-core-sdk
    steps:
      - checkout
      - run:
          name: apt update
          command: apt-get update;
      - run:
          name: test
          command: dotnet test

  build-docker-image:
    executor: docker-publisher
    steps:
     - checkout
     - setup_remote_docker
     - run:
         name: Build docker image
         command: |
            docker build -t $IMAGE_NAME:latest .
     - run:
         name: Archive docker image
         command: docker save -o image.tar $IMAGE_NAME
     - persist_to_workspace:
         root: .
         paths:
          - ./image.tar

  docker-publish-image:
    executor: docker-publisher
    steps:
     - attach_workspace:
         at: /tmp/workspace
     - setup_remote_docker
     - run:
         name: Load archived Docker image
         command: docker load -i /tmp/workspace/image.tar
     - run:
         name: Publish Docker Image to Docker Hub
         command: |
           echo "$DOCKER_ACCESSTOKEN" | docker login -u $DOCKER_LOGIN --password-stdin
           IMAGE_TAG=${CIRCLE_TAG}
           docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
           docker push $IMAGE_NAME:latest
           docker push $IMAGE_NAME:$IMAGE_TAG

workflows:
  build-test-upload_image:
    jobs:
      - build-app:
          filters:
            tags:
              only: /.*/
      - test-app:
          requires:
            - build-app
          filters:
            tags:
              only: /.*/